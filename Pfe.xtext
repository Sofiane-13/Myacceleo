grammar org.xtext.UnivTlemcen.pfe.Pfe with org.eclipse.xtext.common.Terminals
//hidden (WS, ML_COMMENT, SL_COMMENT)

generate pfe "http://www.xtext.org/UnivTlemcen/pfe/Pfe"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Application:
	'application' name=STRING '=>' packageName=STRING  
	'FirstLayout' ':'  (FirstLayout+=[Layout] )?
	'{'
		(model+=Model)*
		(vue+=Vue)* 
		
		(controleur+=Controleur)+
		
	 '}'
;


/***********************************************************************
 *                                                                     *
 * CONTROLEUR                                                          *
 *                                                                     *
 ***********************************************************************/
Controleur: 'Le controleur : {'		
	Fonctions  //je dois avoir plusieurs  ==> fonctions (fonction+=Fonctions)* marche pas et aussi focntion=Fonction* 
        
        '}';


Fonctions:fonction|stylesheet ;

stylesheet:
	StyleView |StyleText|StyleImage|Styleflexbox
;

fonction:
	AlerteFonction|RemplirTable |Navigate
;
	
	



/***********************************************************************
 *                                                                     *
 * Styles                                                              *
 *                                                                     *
 ***********************************************************************/



StyleText:
	'StyleText' name=ID 
	('color'':' colore=Colors ';'
   'fontFamily'':' fontFamilyE=TypeH ';'
   'fontSize'':' fontSizes=entier ';'
   'fontStyle'':' fontStyles=Three ';'
	'fontWeight'':' fontWeighte=Foor ';' 
   'lineHeight'':' lineHeighte=entier ';'
   'TextAlign'':' TextAligne=Eignth ';'
   'backfaceVisibility '':' backfaceVisibilitye=Backnum ';'
   'backgroundColor'':' backgroundColore=Colors ';'
   'borderBottomColor'':' borderBottomColore=Colors ';'
   'borderBottomLeftRadius'':' borderBottomLeftRadiuse=entier ';'
   'borderBottomRightRadius'':' borderBottomRightRadiuse=entier ';'
   'borderBottomWidth'':' borderBottomWidthe=entier ';'
   'borderColor'':' borderColore=Colors ';'
   'borderLeftColor'':' borderLeftColore=Colors ';'
   'borderLeftWidth'':' borderLeftWidthe=entier ';'
   'borderRadius'':' borderRadiuse=entier ';' 
   'borderRightColor'':' borderRightColore=Colors ';'
   'borderRightWidth'':' borderRightWidth=entier ';'
   'borderStyle'':' borderStyles=bordersty ';'
   'borderTopColor'':' borderTopColore=Colors ';'
   'borderTopLeftRadius'':' borderTopLeftRadiuse=entier ';'
   'borderTopRightRadius'':' borderTopRightRadiuse=entier ';'
   'borderTopWidth'':' borderTopWidthe=entier ';'
   'borderWidth'':' borderWidthe=entier';'
   'opacity'':' opacitye=entier ';'
)
'End.'
;

StyleView:
	'StyleView' name=ID 
	('backfaceVisibility ' ':'  backfaceVisibility2=Backnum ';'
	'backgroundColor'  ':'   backgroundColor2=Colors ';'
	'borderBottomColor'  ':'   borderBottomColor2=Colors ';' 
   'borderBottomLeftRadius'  ':'   borderBottomLeftRadius2=entier ';'
   'borderBottomRightRadius'  ':'   borderBottomRightRadius2=entier ';'
   'borderBottomWidth'  ':'   borderBottomWidth2=entier ';'
   'borderColor'  ':'   borderColort=Colors ';'
   'borderLeftColor'  ':'   borderLeftColort=Colors ';'
   'borderLeftWidth'  ':'   borderLeftWidtht=entier ';'
   'borderRadius'  ':'   borderRadiust=entier ';'
   'borderRightColor'  ':'   borderRightColort=Colors ';'
   'borderRightWidth'  ':'   borderRightWidtht=entier ';'
   'borderStyle'  ':'   borderStylet=bordersty ';'
   'borderTopColor' ':'  borderTopColort=Colors ';'
   'borderTopLeftRadius'  ':'   borderTopLeftRadiust=entier ';'
   'borderTopRightRadius' ':'  borderTopRightRadiust=entier ';'
   'borderTopWidth'  ':'   borderTopWidtht=entier ';'
   'borderWidth'  ':'   borderWidtht=entier ';'
   'opacity'  ':'   opacityt=entier ';'
   'alignItems'  ':'   alignItemst=aliIT ';'
   'alignSelf'  ':'   alignSelft=alfem ';'
   'bottom'  ':'   bottomt=entier ';'
   'flex'  ':'   flext=entier ';'
   'flexDirection'  ':'   flexDirectiont=flexd ';'
   'flexWrap'  ':'   flexWrapt=One ';'
   'height '  ':'   heighte=entier ';'
   'justifyContent'  ':'   justifyContente=JustifyContentType ';'
   'left'  ':'   lefte=entier ';'
   'margin'  ':'   margin=entier ';'
   'marginBottom'  ':'  marginBottome=entier ';'
   'marginLeft'  ':'   marginLefte=entier ';'
   'marginRight'  ':'   marginRighte=entier ';'
   'marginTop'  ':'   marginTope=entier ';'
   'marginVertical'  ':'   marginVerticale=entier ';'
   'padding'  ':'   paddingt=entier ';'
   'paddingBottom'  ':'   paddingBottomt=entier ';'
   'paddingHorizontal'  ':'   paddingHorizontale=entier ';'
   'paddingRight'  ':'   paddingRighte=entier ';'
   'paddingTop'  ':'   paddingTope=entier ';'
   'paddingVertical'  ':'   paddingVerticale=entier ';'
   'right'  ':'   rightt=entier ';'
   'width' ':' widtht=entier ';'
)
    'End.'	
;

StyleImage:
	
	 'StyleImage : ' name=ID 
('backfaceVisibility '  ':'   backfaceVisibility=Backnum ';'
	'backgroundColor'  ':'   backgroundColora=Colors ';'
	'borderBottomLeftRadius'  ':'   borderBottomLeftRadiusa=entier ';'
  'borderBottomRightRadius'  ':'   borderBottomRightRadiusa=entier ';'
   'borderColor'  ':'   borderColora=Colors ';'
  'borderRadius'  ':'   borderRadiusa=entier ';'
   'borderTopLeftRadius'  ':'   borderTopLeftRadiusa=entier ';'
   'borderTopRightRadius'  ':'   borderTopRightRadiusa=entier ';'
   'borderWidth'  ':'   borderWidtha=entier ';'
   'opacity'  ':'   opacitya=entier ';'
   'overflow'  ':'   overflowa=entier ';'
   'alignItems'  ':'   alignItemst=aliIT ';'
   'alignSelf'  ':'   alignSelft=alfem ';'
   'bottom'  ':'   bottomt=entier ';'
   'flex'  ':'   flext=entier ';'
  'justifyContent'  ':'   justifyContente=JustifyContentType ';'
   'left'  ':'   lefte=entier ';'
   'margin'  ':'   margin=entier ';'
   'marginBottom'  ':'   marginBottome=entier ';'
   'marginLeft'  ':'   marginLefte=entier ';'
   'marginRight'  ':'   marginRighte=entier ';'
   'marginTop'  ':'   marginTope=entier ';'
   'marginVertical'  ':'   marginVerticale=entier ';'
   'padding'  ':'   paddingt=entier ';'
   'paddingBottom'  ':'   paddingBottomt=entier ';'
   'paddingHorizontal'  ':'   paddingHorizontale=entier ';'
   'paddingRight'  ':'   paddingRighte=entier ';'
   'paddingTop'  ':'   paddingTope=entier ';'
   'paddingVertical'  ':'   paddingVerticale=entier ';'
   'right'  ':'   rightt=entier ';'
   'width'   ':'   widtht=entier ';'
   'flexDirection'  ':'   flexDirectiont=flexd ';'
   'flexWrap'  ':'   flexWrapt=One ';'
   'height '  ':'   heighte=entier ';'
)
'End.'
	;

Styleflexbox:
    'Styleflexbox' name=ID 
            
  ( 'alignItems'  ':'  alignItems3=aliIT ';' 
    'alignSelf'  ':'   alignSelf3=alfem ';'
    'borderBottomWidth'  ':'   borderBottomWidth3=entier ';'
    'borderLeftWidth'  ':'   borderLeftWidth3=entier ';'
    'borderRightWidth'  ':'   borderRightWidth3=entier ';'
    'borderTopWidth'  ':'   borderTopWidth3=entier ';' 
     'borderWidth'  ':'   borderWidth3=entier ';'
     'bottom'  ':'   bottom3=entier ';'
     'flex'  ':'   flex3=entier ';'
     'flexDirection'  ':'   flexDirection3=flexd ';' 
     'flexWrap'  ':'   flexWrap3=One ';' 
     'height '  ':'   height3=entier ';'
     'justifyContent'  ':'   justifyContent3=JustifyContentType ';'
     'left'  ':'   left3=entier ';' 
     'margin'  ':'   margin3=entier ';'
     'marginBottom'  ':'   marginBottom3=entier ';'
     'marginLeft'  ':'   marginLeft3=entier ';' 
     'marginRight'  ':'   marginRight3=entier ';'
     'marginTop'  ':'   marginTop3=entier ';'
     'marginVertical'  ':'   marginVertical3=entier ';'
     'padding'  ':'   pendding3=entier ';'
     'paddingBottom'  ':'   panddingB=entier ';'

)
'End.'
;
//StyleImage:
	RemplirTable:
	 'RemplirTable' name=ID ':'  
('use '  ':'   utiliser+=[TableDefinition] (',' utiliser+=[TableDefinition])* ';'
	
)
'End.'
	;
 
AlerteFonction:
	'AlertFunction' name=ID ':'  
    ('Message'  ':'   message = ID   ';') 'End.'
   ;

Navigate:
	'Navigate' name=ID ':'  
	('Reference'   ':'    ref+=[Layout] (',' ref+=[Layout])*  ';')'End.'
;


/***********************************************************************
 *                                                                     *
 * VUE                                                                 *
 *                                                                     *
 ***********************************************************************/
Vue: 
     'La vue : {'	
       
        Elements
       
	         '}'
;

Elements:
	Bouton|Layout |
	Heading| Tab |ContainerFonctions|ContainerStyle	|lists
   |Icons|CheckBox | Forms |RadioButton |	composant 
	;

composant:
	Video |MapView |Image |Audio
;
 
/****************************************************************************
 *                                                                          *
 *Bouton,Layout ,Heading,Tab ,lists,Icons,CheckBox,Forms,RadioButton,AddItem*
 *                                                                          *
 ****************************************************************************/	
	
Forms:

	Text |Input
;
lists :
	listView
;
Icons:
    Icone | SocialIcon
;
 
listView :
      'listView' (name=ID)?   
     (  
      'use '   ':'    utiliser+=[TableDefinition] (',' utiliser+=[TableDefinition])* ';'
      'ligne'   ':'    ligne=LC ';'
      'colonne'   ':'    colonne=LC ';'
       'Style '   ':'    Style=[StyleText] ? ';' 
      )
      'End.'
      ; 

RadioButton: 
      'RadioButton' (name=ID)?    
      (
      'ligne'   ':'   ligne=LC ';' 
      'colonne'  ':'   colonne =LC ';'
      'Style '   ':'   Style=[StyleView] ?';'  
      )
      'End.'
	;
	
CheckBox:
      'CheckBox'  (name=ID)?   
	  (
	  'ligne'   ':'   ligne=LC ';'
	  'colonne'  ':'   colonne =LC ';'
	  'Style '   ':'    Style=[StyleView] ?';'
	  )
	  'End.'  
    ;

Text:
      'Text' (name=ID)?
	  ('contenu '   ':'   contenu=ID ';'
	  'ligne'  ':'   ligne=LC ';'
	  'colonne'  ':'   colonne=LC';'
	  'Style '  ':'   Style=[StyleView] ?';'
	  )
	  'End.'
	;
	
Input:
	 'Input' (name=ID)?
	 (
	 'ligne'  ':'   ligne=LC ';'
	 'colonne'  ':'   colonne=LC ';'
	 'Style '   ':'   Style=[StyleText]? ';'
	 )
	 'End.'
	;
		   


Icone:
    'Icone' (name=ID)? 
	('Type '   ':'  type=IconType  ';'
	'ligne'  ':'   ligne=LC  ';'
	'colonne'  ':'   colonne =LC  ';'
	'Style '  ':'   Style=[StyleView]? ';' 
	)
	'End.'
	
	  ;


SocialIcon:
 'SocialIcon'  (name=ID)? 
  ('SocialIconeType'  ':'   type=SocialIconType ';'
  'Button'  ':'  button=buttonType ';'
  'raised'  ':'   raised=raisedType ';'
  'Onclique'  ':'   onclique=[fonction] ';' //\E0 revoir
  'OnLongclique'  ':'   onlongclique= [fonction] ';'
  'ligne'  ':'   ligne=LC ';'
  'colonne'  ':'   colonne =LC ';' 
  'Style '  ':'   Style=[StyleView]? ';'
   )
   'End.'
;
  		

Tab:	
 'Tab' ( name=ID)?   
 ('Title'  ':'  title=ID ';'
  'text'  ':'  text=textType ';' 
  'icon'  ':'  icon= Icone ';'
  'element'  ':'  elements+=Elements ';'
  'ligne'  ':'  ligne=LC ';'
  'colonne'  ':'  colonne =LC ';'
  )
 'End.'
 ;


Heading:
     
     'Heading' ( name=ID)?     
     ( 'Type '   ':'   type=TypeH? ';' 
     'ligne'  ':'   ligne=LC ';' 
     'colonne'  ':'   colonne =LC ';'
     )
    'End.'
      ;

//container style
ContainerStyle:
	'ContainerStyle' name=ID 
   'End.'
;

//container fonction
ContainerFonctions:
	'ContainerFonctions' name=ID 
   'End.'
;
Layout:
	'Layout' name=ID 
	 ('Title'   ':'   titre=ID ';' 
	'contient'  ':'   contient+=[Elements](',' contient+= [Elements])* ';'
	'Style '   ':'   Style=[StyleView]? ';'	
	'StyleBar'   ':'   StyleB=[StyleView]? ';'
	 )
   'End.'
;
Bouton:
 'Bouton' name=ID 
 ( 
    'icon '  ':'   icon=[Icone] ';' // \E0 supprim\E9 
    'onclique'  ':'   onclique+=[fonction](',' onclique+=[fonction])* ';' 
    'onlongclique'  ':'   onlongclique+=[fonction] (',' onlongclique+= [fonction])* ';'//reference est une relation entre bouton et Fonctions //[Fonctions]
    'Raised/Large'  ':'   Prop=PropType ';'
    'IconRight'  ':'   IconRight=IconRightType ';'
    'ligne'  ':'   ligne=LC ';'
    'colonne'   ':'   colonne =LC ';'
    'Style '  ':'   Style=[StyleView]? ';' 
 ) 
 'End.';

//les composants React native 
     Video:
	'Video' name=ID   
('UrlVideo '   ':'    urlV=STRING ';'  
   'mute'   ':'   mutte=mut ';' 	
   'width'  ':'    widtht=entier ';'
   'height '   ':'    heightr=entier ';'
	'ligne'   ':'    ligneAudio=LC ';'
	'colone'   ':'    coloneAudio=LC ';'
)
'End.'
;
  Audio:
	'Audio' name=ID     
('UrlTel '   ':'    urlT=STRING ';'   	
   'Textbouton'   ':'    Textbout=ID ';'
    'ligne'   ':'    ligneAudio=LC ';'
	'colone'   ':'   coloneAudio=LC ';'	
	'StyleA '   ':'    StyleAudio=[StyleView]? ';'
)
'End.'
;

MapView:
	'MapView' name=ID
	('latitude '  ':'   latitude=SignedNumber ';'
	'longitude'  ':'   longitude=SignedNumber ';'
	'latitudeDelta'  ':'   latitudeDelta=SignedNumber ';'  
	'longitudeDelta'  ':'   longitudeDelta=SignedNumber ';'
	'ligne'   ':'   ligne=LC ';'
    'colone'  ':'   colone=LC ';' 
    )
    'End.'
;

Image:
	'Image' name=ID
	('UrlImage '    ':'    Url=STRING ';'
	'ligne'  ':'   ligne=LC ';'
    'colone'   ':'    colone=LC ';'
    'Style '   ':'   style=[StyleImage]? ';'
    )
    'End.'
;



/***********************************************************************
 *                                                                     *
 * MODEL                                                               *
 *                                                                     *
***********************************************************************/

Model: 'Le model : {'	
	Table //plusieurs tales
'}';

Table returns TableDefinition: 
	'Table' name=ID  
('champ '   ':'   champ+=[Input](',' champ+=[Input])* ';' 
)
'End.'
   ;

/***********************************************************************
 *                                                                     *
 * Emunerated                                                          *
 *                                                                     *
 ***********************************************************************/
 enum One :wrap='wrap' | nowrap='nowrap';
 enum Nine : nn='none' | underline='underline' |linethrough='line-through' |underline='underline line-through';
 enum Eignth :ato='auto'|left='left' | right='right' |center='center' |justify='justify';
 enum Three :normal='normal' | italic='italic';
 enum Foor :nrmal='normal'|bold='bold'|A='100' |B='200' |C='300' | D='400' |E='500' |F='600' |G='700' |H='800'|I='900';     
 enum Colors :  
          none='none'|white='#ffffff'|red='#ff0000'|moccasin='#ffe4b5'|
          green= '#008000'|lightgray='#d3d3d3'|orangered='#ff4500'|
          gold= '#ffd700' |floralwhite= '#fffaf0'| dodgerblue= '#1e90ff'|
          deeppink= '#ff1493'| darksalmon= '#e9967a' | darkorange='#ff8c00'|
          darkmagenta= '#8b008b'  | darkgreen='#006400'| darkgray='#a9a9a9'| 
          darkblue='#00008b'| crimson= '#dc143c' |chocolate='#d2691e'| 
          chartreuse='#7fff00'|cadetblue= '#5f9ea0'  | brown = '#a52a2a'|   
          blueviolet='#8a2be2'|blue='#0000ff'| black= '#000000'|aquamarine='#7fffd4'|
          aliceblue='#f0f8ff'|yellow ='#ffff00'|peachpuff ='#ffdab9';
 
  

enum aliIT :none='none'|flex='flex-start'|flex1= 'flex-end'|cnt= 'center'|str= 'stretch';
enum alfem :none='none'|aut='auto' |flex2='flex-start' | flex3='flex-end'|cnn='center' |sch='stretch';
enum bordersty:none='none'|soli='solid'|dotte='dotted'|dashe='dashed'; 
enum textType:STRING | INT ; 
enum Backnum :none='none'|visibl='visible'| hidde='hidden'; 
enum TypeH:h1 | h2 | h3 | h4 |fontFamily; 		 
enum IconType :octicon='octicon' | material='material' | 
               community='community'|  //\E0 revoir
               zocial='zocial'| ionicon='ionicon' | 
               foundation='foundation' |evilicon='evilicon' | entypo='entypo'|none='none'; 
enum sizelist :none='none'|tal='tall'|smal='small' ;	           
enum SocialIconType :none='none'|facebook='facebook' | twitter='twitter'| 
                     pinterest='pinterest'|linkedin='linkedin'| youtube='youtube'|
                     vimeo='vimeo'| tumblr='tumblr'|instagram='instagram'| 
                     quora='quora'| foursquare='foursquare'| wordpress='wordpress'|	
                     stumbleupon='stumbleupon'| github='github'| twitch=' twitch'| 
                     medium='medium'| soundcloud='soundcloud'|gitlab='gitlab'| 
                     angellist='angellist'| codepen='codepen';	
enum flexd :none='none'|ro='row' | col='column';  
enum mut:false='false'|true='True';
enum buttonType :none='none'|true='true'|false='false';
enum raisedType :none='none'|true='true'|false='false';     
enum PropType   :none='none'|raised='raised' | large='large';   
enum IconRightType :none='none'|true='true'|false='false';
enum JustifyContentType : none='none'|center='center'|fl='flex-start' |fle= 'flex-end' |spac='space-between' |space='space-around'; 
enum entier:none='none'| Un='1' |deux='2' |trois='3' |qutre='4' | cinq='5' |six='6' |sept='7' | Huite='8'|nf='9'|dix='10' |
	              En='11'|dz='12' |Tr='13'|Quat='14'|QZ='15'| sz='16'|ds='17'|dh='18'|dn='19' |Vn='20'|
	              Vi='21'|vd='22' |vt='23' |vq='24' |vs='25'
; 
enum LC :Un='1' |deux='2' |trois='3' |qutre='4' | cinq='5' |six='6' |sept='7' | Huite='8'|nf='9'|dix='10' |
	              En='11'|dz='12' |Tr='13'|Quat='14'|QZ='15'| sz='16'|ds='17'|dh='18'|dn='19' |Vn='20'|
	              Vi='21'|vd='22' |vt='23' |vq='24' |vs='25';
/***********************************************************************
 *                                                                     *
 * DATATYPE & TERMINAL RULES                                           *
 *                                                                     *
 ***********************************************************************/	
terminal INT returns ecore::EInt: ('0'..'9')+;
terminal NUMBER returns ecore::EBigDecimal:
	('0'..'9')* ('.' ('0'..'9')+)?;
//terminal ID : ('a'..'z'|'A'..'Z'|'_')('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

SignedNumber returns ecore::EBigDecimal:
	'-'?NUMBER
;	
//QualifiedName:
//	ID ("." ID)*;		
//terminal STRING	: 
//			'"' ( '\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|'"') )* '"' |
//			"'" ( '\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|"'") )* "'"
//		; 

  